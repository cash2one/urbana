# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-21 08:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import home.models.streamfield_blocks
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtaildocs.blocks
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailredirects', '0005_capitalizeverbose'),
        ('wagtailcore', '0028_merge'),
        ('wagtaildocs', '0007_merge'),
        ('taggit', '0002_auto_20150616_2121'),
        ('wagtailforms', '0003_capitalizeverbose'),
        ('wagtailimages', '0013_make_rendition_upload_callable'),
        ('home', '0011_auto_20160720_1639'),
    ]

    operations = [
        migrations.CreateModel(
            name='StandardBlogIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.wagtailcore.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StandardBlogIndexPageRelatedLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('title', models.CharField(help_text='Link title', max_length=255)),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UniversalBlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.wagtailcore.fields.StreamField((('h2', wagtail.wagtailcore.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.wagtailcore.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.wagtailcore.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.wagtailcore.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock(icon='pilcrow')), ('aligned_image', wagtail.wagtailcore.blocks.StructBlock((('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('caption', wagtail.wagtailcore.blocks.RichTextBlock()), ('alignment', home.models.streamfield_blocks.ImageFormatChoiceBlock())), icon='image', label='Aligned image')), ('pullquote', wagtail.wagtailcore.blocks.StructBlock((('quote', wagtail.wagtailcore.blocks.TextBlock('quote title')), ('attribution', wagtail.wagtailcore.blocks.CharBlock())))), ('document', wagtail.wagtaildocs.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('aligned_html', wagtail.wagtailcore.blocks.StructBlock((('html', wagtail.wagtailcore.blocks.RawHTMLBlock(help_text='Use to embed code/widgets from external sites')), ('alignment', home.models.streamfield_blocks.HTMLAlignmentChoiceBlock())), icon='code', label='Raw HTML'))))),
                ('date', models.DateField(verbose_name='Post date')),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='UniversalBlogPageRelatedLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('title', models.CharField(help_text='Link title', max_length=255)),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.Document')),
                ('link_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Page')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_links', to='home.UniversalBlogPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UniversalBlogPagesTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='home.UniversalBlogPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_universalblogpagestag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='aboutinitiativespage',
            name='feed_image',
        ),
        migrations.RemoveField(
            model_name='aboutinitiativespage',
            name='page_ptr',
        ),
        migrations.RemoveField(
            model_name='aboutinitiativespage',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='aboutinitiativespagerelatedlink',
            name='link_document',
        ),
        migrations.RemoveField(
            model_name='aboutinitiativespagerelatedlink',
            name='link_page',
        ),
        migrations.RemoveField(
            model_name='aboutinitiativespagerelatedlink',
            name='page',
        ),
        migrations.RemoveField(
            model_name='aboutinitiativespagestag',
            name='content_object',
        ),
        migrations.RemoveField(
            model_name='aboutinitiativespagestag',
            name='tag',
        ),
        migrations.RemoveField(
            model_name='aboutnetworknewspage',
            name='feed_image',
        ),
        migrations.RemoveField(
            model_name='aboutnetworknewspage',
            name='page_ptr',
        ),
        migrations.RemoveField(
            model_name='aboutnetworknewspage',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='aboutnetworknewspagerelatedlink',
            name='link_document',
        ),
        migrations.RemoveField(
            model_name='aboutnetworknewspagerelatedlink',
            name='link_page',
        ),
        migrations.RemoveField(
            model_name='aboutnetworknewspagerelatedlink',
            name='page',
        ),
        migrations.RemoveField(
            model_name='aboutnetworknewspagestag',
            name='content_object',
        ),
        migrations.RemoveField(
            model_name='aboutnetworknewspagestag',
            name='tag',
        ),
        migrations.RemoveField(
            model_name='urbanblogpage',
            name='feed_image',
        ),
        migrations.RemoveField(
            model_name='urbanblogpage',
            name='page_ptr',
        ),
        migrations.RemoveField(
            model_name='urbanblogpage',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='urbanblogpagerelatedlink',
            name='link_document',
        ),
        migrations.RemoveField(
            model_name='urbanblogpagerelatedlink',
            name='link_page',
        ),
        migrations.RemoveField(
            model_name='urbanblogpagerelatedlink',
            name='page',
        ),
        migrations.RemoveField(
            model_name='urbanblogpagestag',
            name='content_object',
        ),
        migrations.RemoveField(
            model_name='urbanblogpagestag',
            name='tag',
        ),
        migrations.DeleteModel(
            name='AboutInitiativesPage',
        ),
        migrations.DeleteModel(
            name='AboutInitiativesPageRelatedLink',
        ),
        migrations.DeleteModel(
            name='AboutInitiativesPagesTag',
        ),
        migrations.DeleteModel(
            name='AboutNetworkNewsPage',
        ),
        migrations.DeleteModel(
            name='AboutNetworkNewsPageRelatedLink',
        ),
        migrations.DeleteModel(
            name='AboutNetworkNewsPagesTag',
        ),
        migrations.DeleteModel(
            name='UrbanBlogPage',
        ),
        migrations.DeleteModel(
            name='UrbanBlogPageRelatedLink',
        ),
        migrations.DeleteModel(
            name='UrbanBlogPagesTag',
        ),
        migrations.AddField(
            model_name='universalblogpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='home.UniversalBlogPagesTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='standardblogindexpagerelatedlink',
            name='link_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='standardblogindexpagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_links', to='home.StandardBlogIndexPage'),
        ),
    ]
